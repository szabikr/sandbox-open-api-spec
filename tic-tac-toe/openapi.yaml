openapi: 3.1.0
info:
  title: Tic Tac Toe
  summary: OpenAPI Specification Tutorial
  description: Recreating the Tic Tac Toe API spec after reading the docs
  version: 1.0.0
  contact:
    name: Szabi
    url: https://szabi.space
    email: szabikr.dev@gmail.com
servers:
  - url: http://localhost:3030
    description: dev server
components:
  schemas:
    coordinate:
      type: integer
      minimum: 1
      maximum: 3
      example: 1
      description: One square on the board
    mark:
      type: string
      enum: [".", "X", "O"]
      description: Possible marks that can go on the board, "." means empty square
      example: "X"
    board:
      type: array
      maxItems: 3
      minItems: 3
      items: # Schema Object
        type: array
        maxItems: 3
        minItems: 3
        items: # Schema Object
          $ref: "#/components/schemas/mark"
    status:
      type: object
      properties:
        winner:
          $ref: "#/components/schemas/mark"
        board:
          $ref: "#/components/schemas/board"
    errorMessage:
      type: string
      maxLength: 512
      description: A messages that describes an error
  parameters:
    rowParam:
      name: row
      in: path
      description: Path parameter indicating a row on a board
      required: true
      schema:
        $ref: "#/components/schemas/coordinate"
    columnParam:
      name: column
      in: path
      description: Path parameter indicating a column on a board
      required: true
      schema:
        $ref: "#/components/schemas/coordinate"
paths:
  /board:
    summary: A Path Item Object for Tic Tac Toe Board
    description: Contains all the Operations that have to do something with the Tic Tac Toe Board
    get: # Operation Object to get the board state
      summary: Get the whole board
      description: Retrieves the current state of the board and the winner
      operationId: get_board
      responses: # Responses Object
        "200": # Response Object
          description: Operation completed successfully and you should have the board content
          content: # Media Type Object
            application/json:
              schema: # Schema Object
                $ref: "#/components/schemas/status"
              example:
                winner: "X"
                board:
                  - ["X", "O", "O"]
                  - ["X", "X", "O"]
                  - ["0", ".", "X"]
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
              example: "Internal server error, try again later."
  /board/{row}/{column}:
    parameters:
      - $ref: "#/components/parameters/rowParam"
      - $ref: "#/components/parameters/columnParam"
    get:
      summary: Get a single board square
      operationId: get_square
      responses:
        "200":
          description: Returning the value of a single square successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mark"
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
              example: "Invalid coordinates"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
              example: "Internal server error, try again later."
    put:
      summary: Update a single board square
      operationId: update_square
      requestBody:
        required: true
        description: requesting a mark
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mark"
      responses:
        "200":
          description: Square updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
              example:
                winner: "."
                board:
                  - [".", ".", "."]
                  - [".", "X", "."]
                  - [".", ".", "."]
        "400":
          description: Invalid coordinates or mark
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
              examples:
                invalidCoordinates:
                  summary: The coordinates provided must represent a square on the board
                  value: "Invalid Coordinates."
                notEmpty:
                  summary: The square must be empty meaning it's not taken by X nor O
                  value: "Square is not empty."
                invalidMark:
                  summary: The game is played only using X and O characters
                  value: "Invalid Mark, use X or O."
