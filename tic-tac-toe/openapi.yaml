openapi: 3.1.0
info:
  title: Tic Tac Toe
  summary: OpenAPI Specification Tutorial
  description: Recreating the Tic Tac Toe API spec after reading the docs
  version: 1.0.0
  contact:
    name: Szabi
    url: https://szabi.space
    email: szabikr.dev@gmail.com
components:
  schemas:
    coordinate:
      type: integer
      minimum: 1
      maximum: 3
  parameters:
    rowParam:
      name: row
      in: path
      description: Path parameter indicating a row on a board
      required: true
      schema:
        $ref: "#/components/schemas/coordinate"
    columnParam:
      name: column
      in: path
      description: Path parameter indicating a column on a board
      required: true
      schema:
        $ref: "#/components/schemas/coordinate"
paths:
  /board:
    summary: A Path Item Object for Tic Tac Toe Board
    description: Contains all the Operations that have to do something with the Tic Tac Toe Board
    get: # Operation Object to get the board state
      summary: Get the whole board
      description: Retrieves the current state of the board and the winner
      operationId: get_whole_board
      responses: # Responses Object
        "200": # Response Object
          description: Operation completed successfully and you should have the board content
          content: # Media Type Object
            application/json:
              schema: # Schema Object
                type: object
                properties:
                  winner: # Schema Object
                    type: string
                    enum: [".", "X", "O"]
                    description: Winner of the game. `.` means nobody has won yet.
                  board: # Schema Object
                    type: array
                    maxItems: 3
                    minItems: 3
                    items: # Schema Object
                      type: array
                      maxItems: 3
                      minItems: 3
                      items: # Schema Object
                        type: string
                        enum: [".", "X", "O"]
                        description: Possible values for a board square. `.` means empty square.
  /board/{row}/{column}:
    parameters:
      - $ref: "#/components/parameters/rowParam"
      - $ref: "#/components/parameters/columnParam"
    get:
      summary: Get a single board square
      operationId: get_board_square
      responses:
        "200":
          description: Returning the value of a single square successfully
          content:
            application/json:
              schema:
                type: string
                enum: [".", "X", "O"]
    put:
      summary: Update a single board square
      operationId: set_board_square
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              enum: [".", "X", "O"]
      responses:
        "200":
          description: Square updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  row:
                    $ref: "#/components/schemas/coordinate"
                  column:
                    $ref: "#/components/schemas/coordinate"
                  value:
                    type: string
                    enum: [".", "X", "O"]
